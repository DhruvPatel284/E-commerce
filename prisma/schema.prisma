// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrederStatus{
  Pending
  Delivered
  cancelled
}


model User{
  id          String      @id @default(uuid())
  username    String?
  email       String      @unique
  password    String
  phoneno     String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  orders      Order[]
  address    String?
  pincode    Int?
  state      String?
  city       String?
  country    String?
  carts       Cart?
  resetToken  resetToken?
}



model Product{
  id                   String               @id @default(uuid())
  product_name         String
  product_description  String?
  price                Int
  stock                Int
  quantity             Int?                 @default(0)
  image                String?
  createdAt            DateTime?            @default(now())
  updatedAt            DateTime             @updatedAt
  category             String 
  Category             Category             @relation(fields: [category], references: [id])
}

model Category{
  id          String     @id @default(uuid())
  name        String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  products     Product[]
} 

model Order{
  id          String              @id @default(uuid())
  userId      String
  user        User                @relation(fields: [userId], references: [id])
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  status      String              @default("Pending")
  total       Int                 @default(0)
  products    Json
}

model resetToken {
  id        String   @id @default(uuid())
  userId    String   @unique
  token     String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Cart {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Json
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
}


